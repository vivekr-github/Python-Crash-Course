



Lists:

1. Return every other element using enumerate function

def skip_elements(elements):
	# code goes here
	elm = []
	for index,element in enumerate(elements):
		if index%2==0:
			elm.append(element)
	return elm

print(skip_elements(["a", "b", "c", "d", "e", "f", "g"])) # Should be ['a', 'c', 'e', 'g']
print(skip_elements(['Orange', 'Pineapple', 'Strawberry', 'Kiwi', 'Peach'])) # Should be ['Orange', 'Strawberry', 'Peach']


2. List comprehension - print odd numbers

def odd_numbers(n):
	return [x for x in range(n+1) if x%2==1]

print(odd_numbers(5))  # Should print [1, 3, 5]
print(odd_numbers(10)) # Should print [1, 3, 5, 7, 9]
print(odd_numbers(11)) # Should print [1, 3, 5, 7, 9, 11]
print(odd_numbers(1))  # Should print [1]
print(odd_numbers(-1)) # Should print []


3. Rename file names with extension .hpp to .h

filenames = ["program.c", "stdio.hpp", "sample.hpp", "a.out", "math.hpp", "hpp.out"]
# Generate newfilenames as a list containing the new filenames
# using as many lines of code as your chosen method requires.
newfilenames = filenames
for index,files in enumerate(newfilenames):
    if files.endswith(".hpp"):
        files = files.replace(".hpp",".h")
        newfilenames[index] = files

print(newfilenames)
# Should be ["program.c", "stdio.h", "sample.h", "a.out", "math.h", "hpp.out"]


4. Turn text to pig latin

def pig_latin(text):
  say = ""
  # Separate the text into words
  words = text.split()
  for index,word in enumerate(words):
    # Create the pig latin word and add it to the list
    word = word[1:] + word[0] + "ay"
    words[index] = word
    # Turn the list back into a phrase
  return ' '.join(words)

print(pig_latin("hello how are you")) # Should be "ellohay owhay reaay ouyay"
print(pig_latin("programming in python is fun")) # Should be "rogrammingpay niay ythonpay siay unfay"


5. Convert permissions of a file from octal to string format

def octal_to_string(octal):
    result = ""
    value_letters = [(4,"r"),(2,"w"),(1,"x")]
    # Iterate over each of the digits in octal
    for num in [int(n) for n in str(octal)]:
        # Check for each of the permissions values
        for value, letter in value_letters:
            if num >= value:
                result += letter
                num -= value
            else:
                result += '-'
    return result

print(octal_to_string(755)) # Should be rwxr-xr-x
print(octal_to_string(644)) # Should be rw-r--r--
print(octal_to_string(750)) # Should be rwxr-x---
print(octal_to_string(600)) # Should be rw-------


6. Reads a list of tuples and prints sentence

def guest_list(guests):
	for name, age, profession in guests:
		print(f"{name} is {age} years old and works as {profession}")

guest_list([('Ken', 30, "Chef"), ("Pat", 35, 'Lawyer'), ('Amanda', 25, "Engineer")])

#Click Run to submit code
"""
Output should match:
Ken is 30 years old and works as Chef
Pat is 35 years old and works as Lawyer
Amanda is 25 years old and works as Engineer
"""
